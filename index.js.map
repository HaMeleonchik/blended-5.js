{"version":3,"file":"index.js","sources":["../src/js/local-storage-api.js","../src/js/theme-switcher.js","../src/js/refs.js","../src/js/markup-tasks.js","../src/js/render-tasks.js","../src/js/tasks.js","../src/main.js"],"sourcesContent":["// localStorage\nexport function addToLocalStorage(key, value) {\n  const normalizeData = JSON.stringify(value);\n  try {\n    localStorage.setItem(key, normalizeData);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function getFromLocalStorage(key) {\n  try {\n    const lsData = localStorage.getItem(key);\n    if (lsData === null) {\n      return;\n    }\n\n    const normalizeData = JSON.parse(lsData);\n\n    return normalizeData;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function removeFromLocalStorage(key) {\n  try {\n    const lsData = localStorage.getItem(key);\n    if (lsData === null) {\n      return;\n    }\n    localStorage.removeItem(key);\n    return 'Дані видалено';\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function clearFromLocalStorage(key) {\n  try {\n    const lsData = localStorage.getItem(key);\n    if (lsData === null) {\n      return;\n    }\n    localStorage.clear(key);\n    return 'Дані очищено';\n  } catch (error) {\n    console.error(error);\n  }\n}\n","// Change Theme\nimport { addToLocalStorage, getFromLocalStorage } from '/js/local-storage-api';\nexport function ThemeChange() {\n  document.body.classList.toggle('theme-dark');\n  document.body.classList.toggle('theme-light');\n\n  const bodyClass = document.body.classList.value;\n\n  addToLocalStorage('theme', bodyClass);\n}\n\nexport function setThemeFromLocalStorage() {\n  const theme = getFromLocalStorage('theme');\n  if (theme) {\n    document.body.classList.value = theme;\n  }\n}\n","export function refs() {\n  const form = document.querySelector('.header-form');\n  const titleInput = form?.querySelector('input[name=taskName]');\n  const descriptionInput = form?.querySelector('input[name=taskDescription]');\n  const list = document.querySelector('.tasks-list');\n  return { form, titleInput, descriptionInput, list };\n}\n","export function addItem(item) {\n  const list = document.querySelector('.tasks-list');\n  const html = `\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\" data-id=\"${item.id}\">Delete</button>\n      <h3>${item.title}</h3>\n      <p>${item.description}</p>\n  </li>\n  `;\n\n  list.insertAdjacentHTML('afterbegin', html);\n}\n","import { getFromLocalStorage } from '/js/local-storage-api';\nimport { addItem } from '/js/markup-tasks.js';\n// delete\n\nexport function destroyButton(event) {\n  if (event.target.classList.contains('task-list-item-btn')) {\n    // removeFromLocaleStorage\n    const idToRemove = event.target.getAttribute('data-id');\n    const savedCards = getFromLocalStorage('cards');\n    const updatedCards = savedCards.filter(item => item.id != idToRemove);\n    localStorage.setItem('cards', JSON.stringify(updatedCards));\n    // removeFromHtml\n    const listItem = event.target.closest('.task-list-item');\n    listItem.remove();\n  }\n}\n// addCards\n\nexport function populationDataBlock() {\n  const savedCards = getFromLocalStorage('cards');\n  if (savedCards) {\n    for (let i = 0; i < savedCards.length; i++) {\n      addItem(savedCards[i]);\n    }\n  }\n}\n","import { getFromLocalStorage } from '/js/local-storage-api';\nimport { addItem } from '/js/markup-tasks';\nimport { refs } from '/js/refs';\n\nconst { titleInput, descriptionInput } = refs();\n\nexport function boxCreate(event) {\n  event.preventDefault();\n  const savedCards = getFromLocalStorage('cards');\n\n  if (savedCards && savedCards.length) {\n    const maxIdObject = savedCards.reduce(\n      (max, item) => (item.id > max.id ? item : max),\n      savedCards[0]\n    );\n\n    const maxId = maxIdObject.id;\n\n    const info = {\n      id: maxId + 1,\n      title: titleInput.value,\n      description: descriptionInput.value,\n    };\n\n    savedCards.push(info);\n\n    localStorage.setItem('cards', JSON.stringify(savedCards));\n    addItem(info);\n  } else {\n    const cards = [];\n\n    const info = {\n      id: 0,\n      title: titleInput.value,\n      description: descriptionInput.value,\n    };\n\n    cards.push(info);\n\n    localStorage.setItem('cards', JSON.stringify(cards));\n    addItem(info);\n  }\n\n  titleInput.value = '';\n  descriptionInput.value = '';\n}\n","/*\n  Створи список справ.\n  На сторінці є два інпути які має вводиться назва і текст задачі.\n  Після натискання на кнопку \"Add\" завдання додається до списку #task-list.\n\n  У кожної картки має бути кнопка \"Delete\", щоб можна було\n  прибрати завдання зі списку.\n  Список із завданнями має бути доступним після перезавантаження сторінки.\n\n  Розмітка картки задачі\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>Заголовок</h3>\n      <p>Текст</p>\n  </li>\n*/\n\nimport { ThemeChange, setThemeFromLocalStorage } from './js/theme-switcher.js';\nimport { refs } from './js/refs.js';\nimport { destroyButton, populationDataBlock } from './js/render-tasks.js';\nimport { boxCreate } from './js/tasks.js';\n// refs\nconst { form, list } = refs();\n\n// add\n\nform.addEventListener('submit', boxCreate);\n\npopulationDataBlock();\nsetThemeFromLocalStorage();\n\n// delete\nlist.addEventListener('click', destroyButton);\n\n// // Change Theme\nconst changeBtn = document.querySelector('.theme-toggle-button');\nchangeBtn.addEventListener('click', ThemeChange);\n"],"names":["addToLocalStorage","key","value","normalizeData","error","getFromLocalStorage","lsData","ThemeChange","bodyClass","setThemeFromLocalStorage","theme","refs","form","titleInput","descriptionInput","list","addItem","item","html","destroyButton","event","idToRemove","updatedCards","populationDataBlock","savedCards","i","boxCreate","info","max","cards","changeBtn"],"mappings":"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"}